{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Eli Forbes - v-eliforbes@microsoft.com",
    "comments": "Solution template for Apache Log4j Vulnerability Detection"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Apache Log4j Vulnerability Detection",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    }
  },
  "variables": {
    "Log4jPostCompromiseHunting_workbook": "Log4jPostCompromiseHunting_workbook",
    "_Log4jPostCompromiseHunting_workbook": "[variables('Log4jPostCompromiseHunting_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "Log4jVulnerableMachines_AnalyticalRules": "Log4jVulnerableMachines_AnalyticalRules",
    "_Log4jVulnerableMachines_AnalyticalRules": "[variables('Log4jVulnerableMachines_AnalyticalRules')]",
    "AzureWAFmatching_log4j_vuln_AnalyticalRules": "AzureWAFmatching_log4j_vuln_AnalyticalRules",
    "_AzureWAFmatching_log4j_vuln_AnalyticalRules": "[variables('AzureWAFmatching_log4j_vuln_AnalyticalRules')]",
    "Log4J_IPIOC_Dec112021_AnalyticalRules": "Log4J_IPIOC_Dec112021_AnalyticalRules",
    "_Log4J_IPIOC_Dec112021_AnalyticalRules": "[variables('Log4J_IPIOC_Dec112021_AnalyticalRules')]",
    "UserAgentSearch_log4j_AnalyticalRules": "UserAgentSearch_log4j_AnalyticalRules",
    "_UserAgentSearch_log4j_AnalyticalRules": "[variables('UserAgentSearch_log4j_AnalyticalRules')]",
    "WAF_log4j_vulnerability_HuntingQueries": "WAF_log4j_vulnerability_HuntingQueries",
    "_WAF_log4j_vulnerability_HuntingQueries": "[variables('WAF_log4j_vulnerability_HuntingQueries')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "NetworkConnectionldap_log4j_HuntingQueries": "NetworkConnectionldap_log4j_HuntingQueries",
    "_NetworkConnectionldap_log4j_HuntingQueries": "[variables('NetworkConnectionldap_log4j_HuntingQueries')]",
    "Firewall_Disable_Activity_HuntingQueries": "Firewall_Disable_Activity_HuntingQueries",
    "_Firewall_Disable_Activity_HuntingQueries": "[variables('Firewall_Disable_Activity_HuntingQueries')]",
    "Apache_log4j_Vulnerability_HuntingQueries": "Apache_log4j_Vulnerability_HuntingQueries",
    "_Apache_log4j_Vulnerability_HuntingQueries": "[variables('Apache_log4j_Vulnerability_HuntingQueries')]",
    "Process_Termination_Activity_HuntingQueries": "Process_Termination_Activity_HuntingQueries",
    "_Process_Termination_Activity_HuntingQueries": "[variables('Process_Termination_Activity_HuntingQueries')]",
    "Suspicious_ShellScript_Activity_HuntingQueries": "Suspicious_ShellScript_Activity_HuntingQueries",
    "_Suspicious_ShellScript_Activity_HuntingQueries": "[variables('Suspicious_ShellScript_Activity_HuntingQueries')]",
    "Base64_Download_Activity_HuntingQueries": "Base64_Download_Activity_HuntingQueries",
    "_Base64_Download_Activity_HuntingQueries": "[variables('Base64_Download_Activity_HuntingQueries')]",
    "Container_Miner_Activity_HuntingQueries": "Container_Miner_Activity_HuntingQueries",
    "_Container_Miner_Activity_HuntingQueries": "[variables('Container_Miner_Activity_HuntingQueries')]",
    "Linux_Toolkit_Detected_HuntingQueries": "Linux_Toolkit_Detected_HuntingQueries",
    "_Linux_Toolkit_Detected_HuntingQueries": "[variables('Linux_Toolkit_Detected_HuntingQueries')]",
    "NetworkConnectionToNewExternalLDAPServer_HuntingQueries": "NetworkConnectionToNewExternalLDAPServer_HuntingQueries",
    "_NetworkConnectionToNewExternalLDAPServer_HuntingQueries": "[variables('NetworkConnectionToNewExternalLDAPServer_HuntingQueries')]",
    "sourceId": "azuresentinel.azure-sentinel-solution-apachelog4jvulnerability",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2020-02-12",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Log4j Post Compromise Hunting\\n---\\n\\nThis hunting workbook is intended to help identify activity related to the Log4j compromise discovered in December 2021.<br>\\nMore details can be found in the following reports:\\n - https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/\"},\"name\":\"text - 2\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"2d961dc0-1459-4406-8958-6260fec61361\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"FindTrace\",\"subTarget\":\"FindTrace\",\"style\":\"link\"},{\"id\":\"fbc91177-748c-4880-946a-b5d014e32aa6\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"SecurityNestedRecommendation\",\"subTarget\":\"SecurityNestedRecommendation\",\"style\":\"link\"},{\"id\":\"c2a98db3-8b74-459d-a4f5-c61ab64b7756\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"AzureDiagnostics\",\"subTarget\":\"AzureDiagnostics\",\"style\":\"link\"},{\"id\":\"bafb8fbb-3d10-43d7-97ea-808d17742c52\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"MultipleDataSources\",\"subTarget\":\"MultipleDataSources\",\"style\":\"link\"},{\"id\":\"e7ed0b51-0c07-4189-a0bf-d64f97e0a124\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Syslog\",\"subTarget\":\"Syslog\",\"style\":\"link\"}]},\"name\":\"links - 6\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## FindTrace\\r\\n\\r\\n\\r\\nThis tab is useful to find out any occuranes of the collected IOC in the existing workspace.\\r\\nThis loads the list of curated IOCs listed in \\r\\n\\r\\nhttps://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Log4j_IOC_List.csv\\r\\n\\r\\nBased on the selection of one it loads the tables having any occurance of the selected IOCs.\\r\\n\\r\\nBased on a table selected it loads the raw logs from the table.\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"064d84aa-3004-4950-af39-59e04c0c4c68\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"timeframe\",\"label\":\"Hunting Time Frame\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":2592000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"30\",\"name\":\"parameters - 1\"},{\"type\":1,\"content\":{\"json\":\"Set the timeframe you wish to hunt in using the dropdown to the right.\\r\\nNote that using a large timeframe may cause queries to timeout depending on the size of your environment. If you have difficulties try reducing your timeframe.\",\"style\":\"info\"},\"customWidth\":\"70\",\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let IPList = externaldata(IPAddress:string)[@\\\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Log4j_IOC_List.csv\\\"] with (format=\\\"csv\\\", ignoreFirstRecord=True);\\r\\nIPList\",\"size\":2,\"title\":\"IOC List\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"timeframe\",\"exportFieldName\":\"IPAddress\",\"exportParameterName\":\"selectedIP\",\"exportDefaultValue\":\"0.0.0.0\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"15\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"search \\\"{selectedIP}\\\"\\r\\n| distinct  $table\\r\\n| project-rename TableName = $table\",\"size\":2,\"title\":\"Find Trace for {selectedIP}\",\"noDataMessage\":\"No Trace found of this IP Address\",\"noDataMessageStyle\":3,\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"exportFieldName\":\"TableName\",\"exportParameterName\":\"selectedTable\",\"exportDefaultValue\":\"None\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"customWidth\":\"25\",\"conditionalVisibility\":{\"parameterName\":\"selectedIP\",\"comparison\":\"isNotEqualTo\",\"value\":\"0.0.0.0\"},\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{selectedTable}\\r\\n| search \\\"{selectedIP}\\\"\",\"size\":2,\"title\":\"Traces in {selectedTable}\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"60\",\"conditionalVisibilities\":[{\"parameterName\":\"selectedTable\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},{\"parameterName\":\"selectedIP\",\"comparison\":\"isNotEqualTo\",\"value\":\"0.0.0.0\"}],\"name\":\"query - 6\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"FindTrace\"},\"name\":\"group - 5 - Copy\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## SecurityNestedRecommendation\\r\\n------------------------\\r\\n\\r\\n  This section uses the Azure Defender Security Nested Recommendations data to find machines vulnerable to log4j CVE-2021-44228. Log4j is an open-source Apache logging library that is used in \\r\\n   many Java-based applications. Security Nested Recommendations data is sent to Microsoft Sentinel using the continuous export feature of Azure Defender(refrence link below).\\r\\n   \\r\\n   Reference: https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/\\r\\n\\r\\n   Reference: https://docs.microsoft.com/azure/security-center/continuous-export?tabs=azure-portal\\r\\n   \\r\\n   Reference: https://techcommunity.microsoft.com/t5/microsoft-defender-for-cloud/how-defender-for-cloud-displays-machines-affected-by-log4j/ba-p/3037271'\\r\\n\"},\"name\":\"text - 6\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"ea3c6cdf-3199-4b98-845f-cfdba057542f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"timeframe\",\"label\":\"Hunting Timeframe\",\"type\":4,\"description\":\"Used to set the scope of other queries\",\"value\":{\"durationMs\":2592000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"30\",\"name\":\"parameters - 0\"},{\"type\":1,\"content\":{\"json\":\"Set the timeframe you wish to hunt in using the dropdown to the right.\\r\\nNote that using a large timeframe may cause queries to timeout depending on the size of your environment. If you have difficulties try reducing your timeframe.\",\"style\":\"info\"},\"customWidth\":\"70\",\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SecurityNestedRecommendation\\r\\n  | where RemediationDescription has 'CVE-2021-44228'\\r\\n  | parse ResourceDetails with * 'virtualMachines/' VirtualMAchine '\\\"' *\\r\\n  | summarize arg_min(TimeGenerated, *) by TenantId, RecommendationSubscriptionId, VirtualMAchine, RecommendationName,Description,RemediationDescription, tostring(AdditionalData),VulnerabilityId\",\"size\":0,\"title\":\"Vulnerable Machines related to log4j CVE-2021-44228\",\"noDataMessage\":\"No user signins in the timeframe set.\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"exportedParameters\":[{\"fieldName\":\"IPAddress\",\"parameterName\":\"ip_addr\",\"parameterType\":1},{\"fieldName\":\"UserPrincipalName\",\"parameterName\":\"upn\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"Vulnerable Machines related to log4j CVE-2021-44228\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"SecurityNestedRecommendation\"},\"name\":\"SecurityNestedRecommendation\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"AzureDiagnostics\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Azure Diagnostics\\r\\n------------------------\\r\\n\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"46282188-a54e-4ff0-a5eb-9d4ef712d9e9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"timeframe\",\"label\":\"Hunting Time Frame\",\"type\":4,\"description\":\"Used to time scope the subsequent hunting queries\",\"isRequired\":true,\"value\":{\"durationMs\":2592000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"30\",\"name\":\"parameters - 1\"},{\"type\":1,\"content\":{\"json\":\"Set the timeframe you wish to hunt in using the dropdown to the right.\\r\\nNote that using a large timeframe may cause queries to timeout depending on the size of your environment. If you have difficulties try reducing your timeframe.\",\"style\":\"info\"},\"customWidth\":\"70\",\"name\":\"text - 2\"},{\"type\":1,\"content\":{\"json\":\"## Azure WAF matching for Log4j vuln(CVE-2021-44228)\\r\\n\\r\\nThis query will alert on a positive pattern match by Azure WAF for CVE-2021-44228 log4j vulnerability exploitation attempt. If possible, it then decodes the malicious command for further analysis.\\r\\n   Refrence: https://www.microsoft.com/security/blog/2021/12/11/guidance-for-preventing-detecting-and-hunting-for-cve-2021-44228-log4j-2-exploitation/\"},\"name\":\"text - 13\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AzureDiagnostics\\r\\n  | where details_data_s has \\\"jndi:\\\"\\r\\n  | parse details_data_s with * '${' MaliciousCommand '}' *\\r\\n  | extend EncodeCmd = iff(MaliciousCommand has 'Base64/', split(split(MaliciousCommand, \\\"Base64/\\\",1)[0], \\\"}\\\", 0)[0], \\\"\\\")\\r\\n  | extend EncodeCmd1 = iff(MaliciousCommand has 'base64/', split(split(MaliciousCommand, \\\"base64/\\\",1)[0], \\\"}\\\", 0)[0], \\\"\\\")\\r\\n  | extend CmdLine = iff( isnotempty(EncodeCmd), EncodeCmd, EncodeCmd1)\\r\\n  | extend DecodedCmdLine = base64_decode_tostring(tostring(CmdLine))\\r\\n  | extend DecodedCmdLine = iff( isnotempty(DecodedCmdLine), DecodedCmdLine, \\\"Unable to decode\\\")\\r\\n  | project TimeGenerated, Target=hostname_s, MaliciousHost = clientIp_s, MaliciousCommand, details_data_s, DecodedCmdLine, Message, ruleSetType_s, OperationName, SubscriptionId, details_message_s, details_file_s\\r\\n\",\"size\":0,\"title\":\"Applications or Service Principals with new Key Credentials Added.\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"exportedParameters\":[{\"fieldName\":\"AppId\",\"parameterName\":\"app_id_1\",\"parameterType\":1},{\"fieldName\":\"InitiatingUser\",\"parameterName\":\"init_user\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 3\"},{\"type\":1,\"content\":{\"json\":\"## WAF_log4j_vulnerability\\r\\n\\r\\nThis hunting query looks in Azure Web Application Firewall data to find possible exploitation attempts for CVE-2021-44228 involving log4j vulnerability.\\r\\n   Refrence: https://www.microsoft.com/security/blog/2021/12/11/guidance-for-preventing-detecting-and-hunting-for-cve-2021-44228-log4j-2-exploitation/\\r\\n\"},\"name\":\"text - 16\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let log4jcmdstring = dynamic([\\\"${jndi:ldap\\\",\\\"${jndi:dns\\\",\\\"${jndi:rmi\\\",\\\"${jndi:corba\\\",\\\"${jndi:iiop\\\",\\\"${jndi:nis\\\",\\\"${jndi:nds\\\"]);\\r\\n  let log4jRegex = @'(\\\\\\\\$|%24)(\\\\\\\\{|%7B)([^jJ]*[jJ])([^nN]*[nN])([^dD]*[dD])([^iI]*[iI])(:|%3A|\\\\\\\\$|%24|}|%7D)';\\r\\n  AzureDiagnostics\\r\\n  | where Category in (\\\"FrontdoorWebApplicationFirewallLog\\\", \\\"FrontdoorAccessLog\\\", \\\"ApplicationGatewayFirewallLog\\\", \\\"ApplicationGatewayAccessLog\\\")\\r\\n  //The regex and the string matching look for the most common attacks. This is not supposed to be comprehensive.\\r\\n  | where originalRequestUriWithArgs_s has_any (log4jcmdstring) or originalRequestUriWithArgs_s matches regex log4jRegex or userAgent_s has_any (log4jcmdstring) or  userAgent_s matches regex log4jRegex\\r\\n  | extend CmdLine = iff(originalRequestUriWithArgs_s has 'Base64/', split(split(originalRequestUriWithArgs_s, \\\"Base64/\\\",1)[0], \\\"}\\\", 0)[0], split(split(userAgent_s, \\\"Base64/\\\",1)[0], \\\"}\\\", 0)[0])\\r\\n  | extend CmdLine = base64_decode_tostring(tostring(CmdLine))\\r\\n  | where CmdLine has_any (\\\"wget\\\",\\\"curl\\\")\\r\\n  | summarize Total = count() by originalRequestUriWithArgs_s, userAgent_s, clientIP_s,clientPort_d, TimeGenerated, host_s, requestUri_s, httpStatus_d,listenerName_s, CmdLine, httpMethod_s, Category\",\"size\":0,\"title\":\"Azure WAF Log4j CVE-2021-44228 hunting\",\"noDataMessage\":\"No Service Principals Added to Groups in Timeframe\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"exportedParameters\":[{\"fieldName\":\"TargetUserId\",\"parameterName\":\"target_id\",\"parameterType\":1},{\"fieldName\":\"GroupName\",\"parameterName\":\"group\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 4\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"AzureDiagnostics\"},\"name\":\"group - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## MultipleDataSources\\r\\n\\r\\nThis query uses various log sources having user agent data to look for log4j CVE-2021-44228 exploitation attempt based on user agent pattern. Log4j is an open-source Apache logging library that is used in \\r\\n   many Java-based applications. The regex and the string matching look for the most common attacks. This might not be comprehensive to detect every possible user agent variation.\\r\\n   Reference: https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9825da9b-9932-4b35-b6dc-26aa29a58913\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"timeframe\",\"label\":\"Hunting Time Frame\",\"type\":4,\"value\":{\"durationMs\":2592000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"30\",\"name\":\"parameters - 2\"},{\"type\":1,\"content\":{\"json\":\"Set the timeframe you wish to hunt in using the dropdown to the right.\\r\\nNote that using a large timeframe may cause queries to timeout depending on the size of your environment. If you have difficulties try reducing your timeframe.\\r\\n\\r\\n\",\"style\":\"info\"},\"customWidth\":\"70\",\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let UserAgentString = dynamic ([\\\"${jndi:ldap:/\\\", \\\"${jndi:rmi:/\\\", \\\"${jndi:ldaps:/\\\", \\\"${jndi:dns:/\\\", \\\"${jndi:iiop:/\\\",\\\"${jndi:\\\",\\\"${jndi:nds:/\\\",\\\"${jndi:corba/\\\"]);\\r\\n  let UARegex = @'(\\\\\\\\$|%24)(\\\\\\\\{|%7B)([^jJ]*[jJ])([^nN]*[nN])([^dD]*[dD])([^iI]*[iI])(:|%3A|\\\\\\\\$|%24|}|%7D)';\\r\\n  (union isfuzzy=true\\r\\n  (OfficeActivity\\r\\n  | where UserAgent has_any (UserAgentString) or UserAgent matches regex UARegex\\r\\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = ClientIP, Account = UserId, Type, Operation\\r\\n  | extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP\\r\\n  ),\\r\\n  (AzureDiagnostics\\r\\n  | where Category in (\\\"FrontdoorWebApplicationFirewallLog\\\", \\\"FrontdoorAccessLog\\\", \\\"ApplicationGatewayFirewallLog\\\", \\\"ApplicationGatewayAccessLog\\\")\\r\\n  | where userAgent_s has_any (UserAgentString) or userAgent_s matches regex UARegex\\r\\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent = userAgent_s, SourceIP = clientIP_s, Type, host_s, requestUri_s, httpStatus_d\\r\\n  | extend timestamp = StartTime, IPCustomEntity = SourceIP, UrlCustomEntity = requestUri_s\\r\\n  ),\\r\\n  (\\r\\n  W3CIISLog\\r\\n  | where csUserAgent has_any (UserAgentString) or csUserAgent matches regex UARegex\\r\\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent = csUserAgent, SourceIP = cIP, Account = csUserName, Type, sSiteName, csMethod, csUriStem\\r\\n  | extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP, UrlCustomEntity = csUriStem\\r\\n  ),\\r\\n  (\\r\\n  AWSCloudTrail\\r\\n  | where UserAgent has_any (UserAgentString) or UserAgent matches regex UARegex\\r\\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = SourceIpAddress, Account = UserIdentityUserName, Type, EventName\\r\\n  | extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP\\r\\n  ),\\r\\n  (SigninLogs\\r\\n  | where UserAgent has_any (UserAgentString) or UserAgent matches regex UARegex\\r\\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = IPAddress, Account = UserPrincipalName, Type, Operation = OperationName, tostring(LocationDetails), tostring(DeviceDetail),    AppDisplayName, ClientAppUsed\\r\\n  | extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP\\r\\n  ),\\r\\n  (AADNonInteractiveUserSignInLogs \\r\\n  | where UserAgent has_any (UserAgentString) or UserAgent matches regex UARegex\\r\\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = IPAddress, Account = UserPrincipalName, Type, Operation = OperationName, tostring(LocationDetails), tostring(DeviceDetail), AppDisplayName, ClientAppUsed\\r\\n  | extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP\\r\\n  ),\\r\\n  (imWebSessions\\r\\n  | where HttpUserAgent has_any (UserAgentString) or HttpUserAgent matches regex UARegex\\r\\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by HttpUserAgent, SourceIP = SrcIpAddr, DstIpAddr, Account = SrcUsername, URL, Type\\r\\n  | extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP, UrlCustomEntity = URL\\r\\n  ),\\r\\n  (imNetworkSession\\r\\n  | where HttpUserAgent has_any (UserAgentString) or HttpUserAgent matches regex UARegex\\r\\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by HttpUserAgent, SourceIP = SrcIpAddr, DstIpAddr, Account = SrcUsername, Type, Url\\r\\n  | extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP, UrlCustomEntity = Url\\r\\n  )\\r\\n  )\",\"size\":0,\"title\":\"User agent search for log4j exploitation attempt\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"MultipleDataSources\"},\"name\":\"group - 4\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Syslog\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Syslog\\r\\n\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"064d84aa-3004-4950-af39-59e04c0c4c68\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"timeframe\",\"label\":\"Hunting Time Frame\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":2592000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"30\",\"name\":\"parameters - 1\"},{\"type\":1,\"content\":{\"json\":\"Set the timeframe you wish to hunt in using the dropdown to the right.\\r\\nNote that using a large timeframe may cause queries to timeout depending on the size of your environment. If you have difficulties try reducing your timeframe.\",\"style\":\"info\"},\"customWidth\":\"70\",\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Syslog\\r\\n  | where Facility == 'user'\\r\\n  | where SyslogMessage has \\\"AUOMS_EXECVE\\\"\\r\\n  | where SyslogMessage has 'jndi' and SyslogMessage has_any ('ldap', 'dns', 'rmi', 'corba', 'iiop', 'nis', 'nds')\\r\\n  | parse SyslogMessage with \\\"type=\\\" EventType \\\" audit(\\\" * \\\"): \\\" EventData\\r\\n  | where EventType =~ \\\"AUOMS_EXECVE\\\"\\r\\n  | project TimeGenerated, EventType, Computer, EventData\\r\\n  | parse EventData with * \\\"syscall=\\\" syscall \\\" syscall_r=\\\" * \\\" success=\\\" success \\\" exit=\\\" exit \\\" a0\\\" * \\\" ppid=\\\" ppid \\\" pid=\\\" pid \\\" audit_user=\\\" audit_user \\\" auid=\\\" auid \\\" user=\\\" user \\\" uid=\\\" uid \\\" group=\\\" group \\\" gid=\\\" gid \\\"effective_user=\\\" effective_user \\\" euid=\\\" euid \\\" set_user=\\\" set_user \\\" suid=\\\" suid \\\" filesystem_user=\\\" filesystem_user \\\" fsuid=\\\" fsuid \\\" effective_group=\\\" effective_group \\\" egid=\\\" egid \\\" set_group=\\\" set_group \\\" sgid=\\\" sgid \\\" filesystem_group=\\\" filesystem_group \\\" fsgid=\\\" fsgid \\\" tty=\\\" tty \\\" ses=\\\" ses \\\" comm=\\\\\\\"\\\" comm \\\"\\\\\\\" exe=\\\\\\\"\\\" exe \\\"\\\\\\\"\\\" * \\\"cwd=\\\\\\\"\\\" cwd \\\"\\\\\\\"\\\" * \\\"name=\\\\\\\"\\\" name \\\"\\\\\\\"\\\" * \\\"cmdline=\\\\\\\"\\\" cmdline \\\"\\\\\\\" containerid=\\\" containerid\\r\\n  | where comm has_any (\\\"wget\\\",\\\"curl\\\")\\r\\n  | where cmdline has_any (\\\"${jndi:ldap\\\",\\\"${jndi:dns\\\",\\\"${jndi:rmi\\\",\\\"${jndi:corba\\\",\\\"${jndi:iiop\\\",\\\"${jndi:nis\\\", \\\"${jndi:nds\\\")\\r\\n  | project TimeGenerated, Computer, audit_user, user, cmdline\\r\\n  | extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\\r\\n  | sort by TimeGenerated desc\",\"size\":0,\"title\":\"Possible exploitation of Apache log4j component detected\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Syslog\\r\\n  | where Facility == 'user'\\r\\n  | where SyslogMessage has \\\"AUOMS_EXECVE\\\"\\r\\n  | parse SyslogMessage with \\\"type=\\\" EventType \\\" audit(\\\" * \\\"): \\\" EventData\\r\\n  | where EventType =~ \\\"AUOMS_EXECVE\\\"\\r\\n  | parse EventData with * \\\"syscall=\\\" syscall \\\" syscall_r=\\\" * \\\" success=\\\" success \\\" exit=\\\" exit \\\" a0\\\" * \\\" ppid=\\\" ppid \\\" pid=\\\" pid \\\" audit_user=\\\" audit_user \\\" auid=\\\" auid \\\" user=\\\" user \\\" uid=\\\" uid \\\" group=\\\" group \\\" gid=\\\" gid \\\"effective_user=\\\" effective_user \\\" euid=\\\" euid \\\" set_user=\\\" set_user \\\" suid=\\\" suid \\\" filesystem_user=\\\" filesystem_user \\\" fsuid=\\\" fsuid \\\" effective_group=\\\" effective_group \\\" egid=\\\" egid \\\" set_group=\\\" set_group \\\" sgid=\\\" sgid \\\" filesystem_group=\\\" filesystem_group \\\" fsgid=\\\" fsgid \\\" tty=\\\" tty \\\" ses=\\\" ses \\\" comm=\\\\\\\"\\\" comm \\\"\\\\\\\" exe=\\\\\\\"\\\" exe \\\"\\\\\\\"\\\" * \\\"cwd=\\\\\\\"\\\" cwd \\\"\\\\\\\"\\\" * \\\"name=\\\\\\\"\\\" name \\\"\\\\\\\"\\\" * \\\"cmdline=\\\\\\\"\\\" cmdline \\\"\\\\\\\" containerid=\\\" containerid\\r\\n  | where cmdline has_any (\\\"service apparmor stop\\\",\\\"service aliyun.service stop\\\",\\\"systemctl disable apparmor\\\",\\\"systemctl disable aliyun.service\\\")\\r\\n  or  (exe has \\\"pkill\\\" and cmdline has_any (\\\"omsagent\\\",\\\"auoms\\\",\\\"omiagent\\\",\\\"waagent\\\") and cmdline !has \\\"/omsagent/plugin/pi\\\"and cmdline !has \\\"/omsconfig/modules\\\")\\r\\n  | project TimeGenerated, Computer, audit_user, user, cmdline\\r\\n  | sort by TimeGenerated desc\",\"size\":0,\"title\":\"Linux security related process termination activity detected\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Syslog\\r\\n  | where Facility == 'user'\\r\\n  | where SyslogMessage has \\\"AUOMS_EXECVE\\\"\\r\\n  | parse SyslogMessage with \\\"type=\\\" EventType \\\" audit(\\\" * \\\"): \\\" EventData\\r\\n  | where EventType =~ \\\"AUOMS_EXECVE\\\"\\r\\n  | project TimeGenerated, EventType, Computer, EventData\\r\\n  | parse EventData with * \\\"syscall=\\\" syscall \\\" syscall_r=\\\" * \\\" success=\\\" success \\\" exit=\\\" exit \\\" a0\\\" * \\\" ppid=\\\" ppid \\\" pid=\\\" pid \\\" audit_user=\\\" audit_user \\\" auid=\\\" auid \\\" user=\\\" user \\\" uid=\\\" uid \\\" group=\\\" group \\\" gid=\\\" gid \\\"effective_user=\\\" effective_user \\\" euid=\\\" euid \\\" set_user=\\\" set_user \\\" suid=\\\" suid \\\" filesystem_user=\\\" filesystem_user \\\" fsuid=\\\" fsuid \\\" effective_group=\\\" effective_group \\\" egid=\\\" egid \\\" set_group=\\\" set_group \\\" sgid=\\\" sgid \\\" filesystem_group=\\\" filesystem_group \\\" fsgid=\\\" fsgid \\\" tty=\\\" tty \\\" ses=\\\" ses \\\" comm=\\\\\\\"\\\" comm \\\"\\\\\\\" exe=\\\\\\\"\\\" exe \\\"\\\\\\\"\\\" * \\\"cwd=\\\\\\\"\\\" cwd \\\"\\\\\\\"\\\" * \\\"name=\\\\\\\"\\\" name \\\"\\\\\\\"\\\" * \\\"cmdline=\\\\\\\"\\\" cmdline \\\"\\\\\\\" containerid=\\\" containerid\\r\\n  | where exe has_any (\\\"bash\\\",\\\"dash\\\")\\r\\n  | where cmdline matches regex  \\\"[0-9]{1,3}\\\\\\\\.[0-9]{1,3}\\\\\\\\.[0-9]{1,3}\\\\\\\\.[0-9]{1,3}\\\"\\r\\n  | where cmdline has \\\"curl\\\" and cmdline has \\\"wget\\\"\\r\\n  | project TimeGenerated, Computer, audit_user, user, cmdline\\r\\n  | extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\\r\\n  | sort by TimeGenerated desc\",\"size\":0,\"title\":\"Suspicious Shell script detected\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Syslog\\r\\n  | where Facility == 'user'\\r\\n  | where SyslogMessage has \\\"AUOMS_EXECVE\\\"\\r\\n  | parse SyslogMessage with \\\"type=\\\" EventType \\\" audit(\\\" * \\\"): \\\" EventData\\r\\n  | project TimeGenerated, EventType, Computer, EventData\\r\\n  | where EventType =~ \\\"AUOMS_EXECVE\\\"\\r\\n  | parse EventData with * \\\"syscall=\\\" syscall \\\" syscall_r=\\\" * \\\" success=\\\" success \\\" exit=\\\" exit \\\" a0\\\" * \\\" ppid=\\\" ppid \\\" pid=\\\" pid \\\" audit_user=\\\" audit_user \\\" auid=\\\" auid \\\" user=\\\" user \\\" uid=\\\" uid \\\" group=\\\" group \\\" gid=\\\" gid \\\"effective_user=\\\" effective_user \\\" euid=\\\" euid \\\" set_user=\\\" set_user \\\" suid=\\\" suid \\\" filesystem_user=\\\" filesystem_user \\\" fsuid=\\\" fsuid \\\" effective_group=\\\" effective_group \\\" egid=\\\" egid \\\" set_group=\\\" set_group \\\" sgid=\\\" sgid \\\" filesystem_group=\\\" filesystem_group \\\" fsgid=\\\" fsgid \\\" tty=\\\" tty \\\" ses=\\\" ses \\\" comm=\\\\\\\"\\\" comm \\\"\\\\\\\" exe=\\\\\\\"\\\" exe \\\"\\\\\\\"\\\" * \\\"cwd=\\\\\\\"\\\" cwd \\\"\\\\\\\"\\\" * \\\"name=\\\\\\\"\\\" name \\\"\\\\\\\"\\\" * \\\"cmdline=\\\\\\\"\\\" cmdline \\\"\\\\\\\" containerid=\\\" containerid\\r\\n  | where cmdline has \\\"/Basic/Command/Base64/\\\"\\r\\n  | where exe has_any (\\\"curl\\\", \\\"wget\\\")\\r\\n  | parse cmdline with * \\\"Base64/\\\" OriginalEncodedCommand:string\\r\\n  | extend EncodedCommand = extract(\\\"((?:[A-Za-z0-9+/-]{4})*(?:[A-Za-z0-9+/-]{2}==|[A-Za-z0-9+/-]{3}=|[A-Za-z0-9+/-]{4}))\\\", 1, OriginalEncodedCommand) \\r\\n  | extend DecodedCommand = base64_decode_tostring(EncodedCommand) \\r\\n  | project TimeGenerated, Computer, audit_user, user, cmdline, DecodedCommand, EncodedCommand\\r\\n  | extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\\r\\n  | sort by TimeGenerated desc\",\"size\":0,\"title\":\"Suspicious Base64 download activity detected\",\"timeContext\":{\"durationMs\":2592000000},\"timeContextFromParameter\":\"timeframe\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 7\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"Syslog\"},\"name\":\"group - 5\"}],\"fromTemplateId\":\"sentinel-Log4jWindsWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query uses the Azure Defender Security Nested Recommendations data to find machines vulnerable to log4j CVE-2021-44228. Log4j is an open-source Apache logging library that is used in \n many Java-based applications. Security Nested Recommendations data is sent to Microsoft Sentinel using the continuous export feature of Azure Defender(refrence link below).\n Reference: https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/\n Reference: https://docs.microsoft.com/azure/security-center/continuous-export?tabs=azure-portal\n Reference: https://techcommunity.microsoft.com/t5/microsoft-defender-for-cloud/how-defender-for-cloud-displays-machines-affected-by-log4j/ba-p/3037271",
        "displayName": "Vulnerable Machines related to log4j CVE-2021-44228",
        "enabled": false,
        "query": "SecurityNestedRecommendation\n| where RemediationDescription has 'CVE-2021-44228'\n| parse ResourceDetails with * 'virtualMachines/' VirtualMAchine '\"' *\n| summarize arg_min(TimeGenerated, *) by TenantId, RecommendationSubscriptionId, VirtualMAchine, RecommendationName,Description,RemediationDescription, tostring(AdditionalData),VulnerabilityId\n| extend Timestamp = TimeGenerated, HostCustomEntity = VirtualMAchine\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P1D",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess",
          "Execution"
        ],
        "entityMappings": [
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query will alert on a positive pattern match by Azure WAF for CVE-2021-44228 log4j vulnerability exploitation attempt. If possible, it then decodes the malicious command for further analysis.\n Refrence: https://www.microsoft.com/security/blog/2021/12/11/guidance-for-preventing-detecting-and-hunting-for-cve-2021-44228-log4j-2-exploitation/",
        "displayName": "Azure WAF matching for Log4j vuln(CVE-2021-44228)",
        "enabled": false,
        "query": "AzureDiagnostics\n| where details_data_s has \"jndi:\"\n| parse details_data_s with * '${' MaliciousCommand '}' *\n| extend EncodeCmd = iff(MaliciousCommand has 'Base64/', split(split(MaliciousCommand, \"Base64/\",1)[0], \"}\", 0)[0], \"\")\n| extend EncodeCmd1 = iff(MaliciousCommand has 'base64/', split(split(MaliciousCommand, \"base64/\",1)[0], \"}\", 0)[0], \"\")\n| extend CmdLine = iff( isnotempty(EncodeCmd), EncodeCmd, EncodeCmd1)\n| extend DecodedCmdLine = base64_decode_tostring(tostring(CmdLine))\n| extend DecodedCmdLine = iff( isnotempty(DecodedCmdLine), DecodedCmdLine, \"Unable to decode\")\n| project TimeGenerated, Target=hostname_s, MaliciousHost = clientIp_s, MaliciousCommand, details_data_s, DecodedCmdLine, Message, ruleSetType_s, OperationName, SubscriptionId, details_message_s, details_file_s \n| extend IPCustomEntity = MaliciousHost, timestamp = TimeGenerated\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Identifies a match across various data feeds for IP IOCs related to the Log4j vulnerability exploit aka Log4Shell described in CVE-2021-44228.  \n References: https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-44228",
        "displayName": "Log4j vulnerability exploit aka Log4Shell IP IOC",
        "enabled": false,
        "query": "\nlet IPList = externaldata(IPAddress:string)[@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Log4j_IOC_List.csv\"] with (format=\"csv\", ignoreFirstRecord=True);\nlet IPRegex = '[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}';\n//Network logs\nlet CSlogSourceIP = CommonSecurityLog | summarize by IPAddress = SourceIP, Type;\nlet CSlogDestIP = CommonSecurityLog | summarize by IPAddress = DestinationIP, Type;\nlet CSlogMsgIP = CommonSecurityLog | extend MessageIP = extract(IPRegex, 0, Message) | summarize by IPAddress = MessageIP, Type;\nlet DnsIP = DnsEvents | summarize by IPAddress = IPAddresses, Type;\n// If you have enabled the imDNS and/or imNetworkSession normalization in your workspace, you can uncomment one or both below.  Reference - https://docs.microsoft.com/azure/sentinel/normalization\n//let imDnsIP = imDns (response_has_any_prefix=IPList) | summarize by IPAddress = ResponseName, Type;\n//let imNetSessIP = imNetworkSession (dstipaddr_has_any_prefix=IPList) | summarize by IPAddress = DstIpAddr, Type;\n//Cloud service logs\nlet officeIP = OfficeActivity | summarize by IPAddress = ClientIP, Type;\nlet signinIP = SigninLogs | summarize by IPAddress, Type;\nlet nonintSigninIP = AADNonInteractiveUserSignInLogs | summarize by IPAddress, Type;\nlet azureActIP = AzureActivity | summarize by IPAddress = CallerIpAddress, Type;\nlet awsCtIP = AWSCloudTrail | summarize by IPAddress = SourceIpAddress, Type;\n//Device logs\nlet vmConnSourceIP = VMConnection | summarize by IPAddress = SourceIp, Type;\nlet vmConnDestIP = VMConnection | summarize by IPAddress = DestinationIp, Type;\nlet iisLogIP = W3CIISLog | summarize by IPAddress = cIP, Type;\nlet devNetIP = DeviceNetworkEvents | summarize by IPAddress = RemoteIP, Type;\n//need to parse to get IP\nlet azureDiagIP = AzureDiagnostics | where ResourceType == \"AZUREFIREWALLS\" | where Category in (\"AzureFirewallApplicationRule\", \"AzureFirewallNetworkRule\") \n| where msg_s has_any (IPList) | parse msg_s with Protocol 'request from ' SourceHost ':' SourcePort 'to ' DestinationHost ':' DestinationPort '. Action:' Action | summarize by IPAddress = DestinationHost, Type;\nlet sysEvtIP = Event | where Source == \"Microsoft-Windows-Sysmon\" | where EventID == 3 | where EventData has_any (IPList) | extend EvData = parse_xml(EventData)\n| extend EventDetail = EvData.DataItem.EventData.Data\n| extend SourceIP = tostring(EventDetail.[9].[\"#text\"]), DestinationIP = tostring(EventDetail.[14].[\"#text\"])\n| where SourceIP in (IPList) or DestinationIP in (IPList) | extend IPAddress = iff(SourceIP in (IPList), SourceIP, DestinationIP) | summarize by IPAddress, Type;\n// If you have enabled the imDNS and/or imNetworkSession normalization in your workdspace, you can uncomment below and include. Reference - https://docs.microsoft.com/azure/sentinel/normalization\n//let ipsort = union isfuzzy=true CSlogDestIP, CSlogMsgIP, CSlogSourceIP, DnsIP, officeIP, signinIP, nonintSigninIP, azureActIP, awsCtIP, vmConnDestIP, vmConnSourceIP, azureDiagIP, sysEvtIP, imDnsIP, imNetSessIP\n// If you uncomment above, then comment out the line below\nlet ipsort = union isfuzzy=true CSlogDestIP, CSlogMsgIP, CSlogSourceIP, DnsIP, officeIP, signinIP, nonintSigninIP, azureActIP, awsCtIP, vmConnDestIP, vmConnSourceIP, azureDiagIP, sysEvtIP\n| summarize by IPAddress\n| where isnotempty(IPAddress) | where not(ipv4_is_private(IPAddress)) and IPAddress !in ('0.0.0.0','127.0.0.1');\nlet ipMatch = ipsort | where IPAddress in (IPList);\n(union isfuzzy=true\n(CommonSecurityLog\n| where SourceIP in (ipMatch) or DestinationIP in (ipMatch) or Message has_any (ipMatch)\n| project TimeGenerated, SourceIP, DestinationIP, Message, SourceUserID, RequestURL, Type\n| extend MessageIP = extract(IPRegex, 0, Message)\n| extend IPMatch = case(SourceIP in (ipMatch), \"SourceIP\", DestinationIP in (ipMatch), \"DestinationIP\", MessageIP in (ipMatch), \"Message\", \"No Match\")\n| extend timestamp = TimeGenerated, IPCustomEntity = case(IPMatch == \"SourceIP\", SourceIP, IPMatch == \"DestinationIP\", DestinationIP, IPMatch == \"Message\", MessageIP, \"No Match\")\n),\n(OfficeActivity\n| where  ClientIP in (ipMatch)\n| project TimeGenerated, UserAgent, Operation, RecordType, UserId, ClientIP, Type\n| extend SourceIPAddress = ClientIP, Account = UserId\n| extend timestamp = TimeGenerated , IPCustomEntity = SourceIPAddress , AccountCustomEntity = Account\n),\n(DnsEvents\n| where  IPAddresses has_any (ipMatch)\n| project TimeGenerated, Computer, IPAddresses, Name, ClientIP, Type\n| extend DestinationIPAddress = IPAddresses,  Host = Computer\n| extend timestamp = TimeGenerated, IPCustomEntity = DestinationIPAddress, HostCustomEntity = Host\n),\n(VMConnection\n| where SourceIp in (ipMatch) or DestinationIp in (ipMatch)\n| project TimeGenerated, Computer, SourceIp, DestinationIp, Type\n| extend IPMatch = case( SourceIp in (ipMatch), \"SourceIP\", DestinationIp in (ipMatch), \"DestinationIP\", \"None\")\n| extend timestamp = TimeGenerated , IPCustomEntity = case(IPMatch == \"SourceIP\", SourceIp, IPMatch == \"DestinationIP\", DestinationIp, \"None\"), Host = Computer\n),\n(Event\n| where Source == \"Microsoft-Windows-Sysmon\"\n| where EventID == 3\n| where EventData has_any (ipMatch)\n| project TimeGenerated, EventData, UserName, Computer, Type\n| extend EvData = parse_xml(EventData)\n| extend EventDetail = EvData.DataItem.EventData.Data\n| extend SourceIP = tostring(EventDetail.[9].[\"#text\"]), DestinationIP = tostring(EventDetail.[14].[\"#text\"])\n| where SourceIP in (ipMatch) or DestinationIP in (ipMatch)\n| extend IPMatch = case( SourceIP in (ipMatch), \"SourceIP\", DestinationIP in (ipMatch), \"DestinationIP\", \"None\")\n| extend timestamp = TimeGenerated, AccountCustomEntity = UserName, HostCustomEntity = Computer , IPCustomEntity = case(IPMatch == \"SourceIP\", SourceIP, IPMatch == \"DestinationIP\", DestinationIP, \"None\")\n),\n(SigninLogs\n| where IPAddress in (ipMatch)\n| project TimeGenerated, UserPrincipalName, IPAddress, Type\n| extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress\n),\n(AADNonInteractiveUserSignInLogs\n| where IPAddress in (ipMatch)\n| project TimeGenerated, UserPrincipalName, IPAddress, Type\n| extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress\n),\n(W3CIISLog\n| where cIP in (ipMatch)\n| project TimeGenerated, Computer, cIP, csUserName, Type\n| extend timestamp = TimeGenerated, IPCustomEntity = cIP, HostCustomEntity = Computer, AccountCustomEntity = csUserName\n),\n(AzureActivity\n| where CallerIpAddress in (ipMatch)\n| project TimeGenerated, CallerIpAddress, Caller, Type\n| extend timestamp = TimeGenerated, IPCustomEntity = CallerIpAddress, AccountCustomEntity = Caller\n),\n(\nAWSCloudTrail\n| where SourceIpAddress in (ipMatch)\n| project TimeGenerated, SourceIpAddress, UserIdentityUserName, Type\n| extend timestamp = TimeGenerated, IPCustomEntity = SourceIpAddress, AccountCustomEntity = UserIdentityUserName\n), \n( \nDeviceNetworkEvents\n| where RemoteIP in (ipMatch)\n| project TimeGenerated, RemoteIP, DeviceName, Type\n| extend timestamp = TimeGenerated, IPCustomEntity = RemoteIP, HostCustomEntity = DeviceName\n),\n(\nAzureDiagnostics\n| where ResourceType == \"AZUREFIREWALLS\"\n| where Category in (\"AzureFirewallApplicationRule\", \"AzureFirewallNetworkRule\")\n| where msg_s has_any (ipMatch)\n| project TimeGenerated, msg_s, Type\n| parse msg_s with Protocol 'request from ' SourceIP ':' SourcePort 'to ' DestinationIP ':' DestinationPort '. Action:' Action\n| where DestinationIP has_any (ipMatch)\n| extend timestamp = TimeGenerated, IPCustomEntity = DestinationIP\n)\n// If you have enabled the imDNS and/or imNetworkSession normalization in your workdspace, you can uncomment below and include. Reference - https://docs.microsoft.com/azure/sentinel/normalization\n//,\n//(imDns (response_has_any_prefix=IPList)\n//| project TimeGenerated, ResponseName, SrcIpAddr, Type\n//| extend DestinationIPAddress = ResponseName,  Host = SrcIpAddr\n//| extend timestamp = TimeGenerated, IPCustomEntity = DestinationIPAddress, HostCustomEntity = Host\n//),\n//(imNetworkSession (dstipaddr_has_any_prefix=IPList)\n//| project TimeGenerated, DstIpAddr, SrcIpAddr, Type\n//| extend timestamp = TimeGenerated, IPCustomEntity = DstIpAddr, HostCustomEntity = SrcIpAddr\n//)\n)\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CommandAndControl"
        ],
        "entityMappings": [
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "AccountCustomEntity"
              }
            ]
          },
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ]
          },
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query uses various log sources having user agent data to look for log4j CVE-2021-44228 exploitation attempt based on user agent pattern. Log4j is an open-source Apache logging library that is used in \n many Java-based applications. The regex and the string matching look for the most common attacks. This might not be comprehensive to detect every possible user agent variation.\n Reference: https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/",
        "displayName": "User agent search for log4j exploitation attempt",
        "enabled": false,
        "query": "let UserAgentString = dynamic ([\"${jndi:ldap:/\", \"${jndi:rmi:/\", \"${jndi:ldaps:/\", \"${jndi:dns:/\", \"${jndi:iiop:/\",\"${jndi:\",\"${jndi:nds:/\",\"${jndi:corba/\"]);\nlet UARegex = @'(\\\\$|%24)(\\\\{|%7B)([^jJ]*[jJ])([^nN]*[nN])([^dD]*[dD])([^iI]*[iI])(:|%3A|\\\\$|%24|}|%7D)';\n(union isfuzzy=true\n(OfficeActivity\n| where UserAgent has_any (UserAgentString) or UserAgent matches regex UARegex\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = ClientIP, Account = UserId, Type, Operation\n| extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP\n),\n(AzureDiagnostics\n| where Category in (\"FrontdoorWebApplicationFirewallLog\", \"FrontdoorAccessLog\", \"ApplicationGatewayFirewallLog\", \"ApplicationGatewayAccessLog\")\n| where userAgent_s has_any (UserAgentString) or userAgent_s matches regex UARegex\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent = userAgent_s, SourceIP = clientIP_s, Type, host_s, requestUri_s, httpStatus_d\n| extend timestamp = StartTime, IPCustomEntity = SourceIP, UrlCustomEntity = requestUri_s\n),\n(\nW3CIISLog\n| where csUserAgent has_any (UserAgentString) or csUserAgent matches regex UARegex\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent = csUserAgent, SourceIP = cIP, Account = csUserName, Type, sSiteName, csMethod, csUriStem\n| extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP, UrlCustomEntity = csUriStem\n),\n(\nAWSCloudTrail\n| where UserAgent has_any (UserAgentString) or UserAgent matches regex UARegex\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = SourceIpAddress, Account = UserIdentityUserName, Type, EventName\n| extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP\n),\n(SigninLogs\n| where UserAgent has_any (UserAgentString) or UserAgent matches regex UARegex\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = IPAddress, Account = UserPrincipalName, Type, Operation = OperationName, tostring(LocationDetails), tostring(DeviceDetail),    AppDisplayName, ClientAppUsed\n| extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP\n),\n(AADNonInteractiveUserSignInLogs \n| where UserAgent has_any (UserAgentString) or UserAgent matches regex UARegex\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = IPAddress, Account = UserPrincipalName, Type, Operation = OperationName, tostring(LocationDetails), tostring(DeviceDetail), AppDisplayName, ClientAppUsed\n| extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP\n),\n(imWebSessions\n| where HttpUserAgent has_any (UserAgentString) or HttpUserAgent matches regex UARegex\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by HttpUserAgent, SourceIP = SrcIpAddr, DstIpAddr, Account = SrcUsername, URL, Type\n| extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP, UrlCustomEntity = URL\n),\n(imNetworkSession\n| where HttpUserAgent has_any (UserAgentString) or HttpUserAgent matches regex UARegex\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by HttpUserAgent, SourceIP = SrcIpAddr, DstIpAddr, Account = SrcUsername, Type, Url\n| extend timestamp = StartTime, AccountCustomEntity = Account, IPCustomEntity = SourceIP, UrlCustomEntity = Url\n)\n)\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P1D",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "URL",
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "UrlCustomEntity"
              }
            ]
          },
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure WAF Log4j CVE-2021-44228 hunting",
            "category": "Hunting Queries",        
            "query": "let log4jcmdstring = dynamic([\"${jndi:ldap\",\"${jndi:dns\",\"${jndi:rmi\",\"${jndi:corba\",\"${jndi:iiop\",\"${jndi:nis\",\"${jndi:nds\"]);\nlet log4jRegex = @'(\\\\$|%24)(\\\\{|%7B)([^jJ]*[jJ])([^nN]*[nN])([^dD]*[dD])([^iI]*[iI])(:|%3A|\\\\$|%24|}|%7D)';\nAzureDiagnostics\n| where Category in (\"FrontdoorWebApplicationFirewallLog\", \"FrontdoorAccessLog\", \"ApplicationGatewayFirewallLog\", \"ApplicationGatewayAccessLog\")\n //Extending the columns to aviod failures.\n| extend originalRequestUriWithArgs_s = column_ifexists(\"originalRequestUriWithArgs_s\", \"\"), \n  userAgent_s = column_ifexists(\"userAgent_s\", \"\"), \n  clientIP_s = column_ifexists(\"clientIP_s\", \"\"),  \n  clientPort_d = column_ifexists(\"originalRequestUriWithArgs_s\", \"\"),\n  host_s = column_ifexists(\"host_s\", \"\"),\n  requestUri_s = column_ifexists(\"requestUri_s\", \"\"),\n  httpStatus_d = column_ifexists(\"httpStatus_d\",\"\"),\n  listenerName_s = column_ifexists(\"listenerName_s\", \"\"),\n  httpMethod_s = column_ifexists(\"httpMethod_s\", \"\")\n //The regex and the string matching look for the most common attacks. This is not supposed to be comprehensive.\n| where originalRequestUriWithArgs_s has_any (log4jcmdstring) or originalRequestUriWithArgs_s matches regex log4jRegex or userAgent_s has_any (log4jcmdstring) or  userAgent_s matches regex log4jRegex\n| extend CmdLine = iff(originalRequestUriWithArgs_s has 'Base64/', split(split(originalRequestUriWithArgs_s, \"Base64/\",1)[0], \"}\", 0)[0], split(split(userAgent_s, \"Base64/\",1)[0], \"}\", 0)[0])\n| extend CmdLine = base64_decode_tostring(tostring(CmdLine))\n| where CmdLine has_any (\"wget\",\"curl\")\n| summarize Total = count() by originalRequestUriWithArgs_s, userAgent_s, clientIP_s,clientPort_d, TimeGenerated, host_s, requestUri_s, httpStatus_d,listenerName_s, CmdLine, httpMethod_s, Category\n| extend IPCustomEntity = clientIP_s, timestamp = TimeGenerated\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query looks in Azure Web Application Firewall data to find possible exploitation attempts for CVE-2021-44228 involving log4j vulnerability."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Malicious Connection to LDAP port for CVE-2021-44228 vulnerability",
            "category": "Hunting Queries",
            "query": "let PrivateIPregex = @'^127\\.|^10\\.|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-1]\\.|^192\\.168\\.';\nlet Port = dynamic(['389', '1389']); \n(union isfuzzy=true\n(DeviceNetworkEvents\n| where InitiatingProcessFileName has_any (\"javaw.exe\",\"java.exe\")\n| where ActionType has \"ConnectionSuccess\"\n| where RemotePort in ('389', '1389')\n| where InitiatingProcessCommandLine has_any ('curl', 'wget')\n| where RemoteIPType =~ 'Public'\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by ActionType, DestinationIP = RemoteIP, RemoteUrl, DestinationPort = RemotePort, SourceIP = LocalIP, Type, InitiatingProcessAccountName, InitiatingProcessCommandLine, InitiatingProcessFolderPath,  InitiatingProcessParentFileName, ProcessName = InitiatingProcessFileName, Computer = DeviceName\n| extend timestamp = StartTime, IPCustomEntity = DestinationIP, HostCustomEntity = Computer\n),\n(VMConnection\n| where ProcessName has_any (\"javaw\",\"java\")\n| where DestinationPort in ('389', '1389')\n| extend DestinationIpType = iff(DestinationIp matches regex PrivateIPregex,\"private\" ,\"public\" )\n| where DestinationIpType == \"public\"\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by TimeGenerated, SourceIP = SourceIp , DestinationIP = DestinationIp, DestinationPort,  BytesReceived, BytesSent, ProcessName, Computer\n| extend timestamp = StartTime, IPCustomEntity = DestinationIP, HostCustomEntity = Computer\n)\n)\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query looks for connection to the default LDAP ports to find possible exploitation attempts for CVE-2021-44228 involving log4j vulnerability."
              },
              {
                "name": "tactics",
                "value": "CommandAndControl"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Suspicious manipulation of firewall detected via Syslog data",
            "category": "Hunting Queries",
            "query": "Syslog\n| where Facility == 'user'\n| where SyslogMessage has \"AUOMS_EXECVE\"\n| parse SyslogMessage with \"type=\" EventType \" audit(\" * \"): \" EventData\n| where EventType =~ \"AUOMS_EXECVE\"\n| parse EventData with * \"syscall=\" syscall \" syscall_r=\" * \" success=\" success \" exit=\" exit \" a0\" * \" ppid=\" ppid \" pid=\" pid \" audit_user=\" audit_user \" auid=\" auid \" user=\" user \" uid=\" uid \" group=\" group \" gid=\" gid \"effective_user=\" effective_user \" euid=\" euid \" set_user=\" set_user \" suid=\" suid \" filesystem_user=\" filesystem_user \" fsuid=\" fsuid \" effective_group=\" effective_group \" egid=\" egid \" set_group=\" set_group \" sgid=\" sgid \" filesystem_group=\" filesystem_group \" fsgid=\" fsgid \" tty=\" tty \" ses=\" ses \" comm=\\\"\" comm \"\\\" exe=\\\"\" exe \"\\\"\" * \"cwd=\\\"\" cwd \"\\\"\" * \"name=\\\"\" name \"\\\"\" * \"cmdline=\\\"\" cmdline \"\\\" containerid=\" containerid\n| where cmdline has_any (\"SuSEfirewall2 stop\",\"reSuSEfirewall2 stop\",\"ufw stop\",\"ufw disable\")\n| project TimeGenerated, Computer, audit_user, user, cmdline\n| extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\n| sort by TimeGenerated desc\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query uses syslog data to alert on any suspicious manipulation of firewall to evade defenses."
              },
              {
                "name": "tactics",
                "value": "DefenseEvasion"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 4",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Possible exploitation of Apache log4j component detected",
            "category": "Hunting Queries",
            "query": "Syslog\n| where Facility == 'user'\n| where SyslogMessage has \"AUOMS_EXECVE\"\n| where SyslogMessage has 'jndi' and SyslogMessage has_any ('ldap', 'dns', 'rmi', 'corba', 'iiop', 'nis', 'nds')\n| parse SyslogMessage with \"type=\" EventType \" audit(\" * \"): \" EventData\n| where EventType =~ \"AUOMS_EXECVE\"\n| project TimeGenerated, EventType, Computer, EventData\n| parse EventData with * \"syscall=\" syscall \" syscall_r=\" * \" success=\" success \" exit=\" exit \" a0\" * \" ppid=\" ppid \" pid=\" pid \" audit_user=\" audit_user \" auid=\" auid \" user=\" user \" uid=\" uid \" group=\" group \" gid=\" gid \"effective_user=\" effective_user \" euid=\" euid \" set_user=\" set_user \" suid=\" suid \" filesystem_user=\" filesystem_user \" fsuid=\" fsuid \" effective_group=\" effective_group \" egid=\" egid \" set_group=\" set_group \" sgid=\" sgid \" filesystem_group=\" filesystem_group \" fsgid=\" fsgid \" tty=\" tty \" ses=\" ses \" comm=\\\"\" comm \"\\\" exe=\\\"\" exe \"\\\"\" * \"cwd=\\\"\" cwd \"\\\"\" * \"name=\\\"\" name \"\\\"\" * \"cmdline=\\\"\" cmdline \"\\\" containerid=\" containerid\n| where comm has_any (\"wget\",\"curl\")\n| where cmdline has_any (\"${jndi:ldap\",\"${jndi:dns\",\"${jndi:rmi\",\"${jndi:corba\",\"${jndi:iiop\",\"${jndi:nis\", \"${jndi:nds\")\n| project TimeGenerated, Computer, audit_user, user, cmdline\n| extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\n| sort by TimeGenerated desc\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query looks for possible attempts to exploit a remote code execution vulnerability in the Log4j component of Apache."
              },
              {
                "name": "tactics",
                "value": "Persistence,Execution"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 5",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Linux security related process termination activity detected",
            "category": "Hunting Queries",
            "query": "Syslog\n| where Facility == 'user'\n| where SyslogMessage has \"AUOMS_EXECVE\"\n| parse SyslogMessage with \"type=\" EventType \" audit(\" * \"): \" EventData\n| where EventType =~ \"AUOMS_EXECVE\"\n| parse EventData with * \"syscall=\" syscall \" syscall_r=\" * \" success=\" success \" exit=\" exit \" a0\" * \" ppid=\" ppid \" pid=\" pid \" audit_user=\" audit_user \" auid=\" auid \" user=\" user \" uid=\" uid \" group=\" group \" gid=\" gid \"effective_user=\" effective_user \" euid=\" euid \" set_user=\" set_user \" suid=\" suid \" filesystem_user=\" filesystem_user \" fsuid=\" fsuid \" effective_group=\" effective_group \" egid=\" egid \" set_group=\" set_group \" sgid=\" sgid \" filesystem_group=\" filesystem_group \" fsgid=\" fsgid \" tty=\" tty \" ses=\" ses \" comm=\\\"\" comm \"\\\" exe=\\\"\" exe \"\\\"\" * \"cwd=\\\"\" cwd \"\\\"\" * \"name=\\\"\" name \"\\\"\" * \"cmdline=\\\"\" cmdline \"\\\" containerid=\" containerid\n| where cmdline has_any (\"service apparmor stop\",\"service aliyun.service stop\",\"systemctl disable apparmor\",\"systemctl disable aliyun.service\")\nor  (exe has \"pkill\" and cmdline has_any (\"omsagent\",\"auoms\",\"omiagent\",\"waagent\") and cmdline !has \"/omsagent/plugin/pi\"and cmdline !has \"/omsconfig/modules\")\n| project TimeGenerated, Computer, audit_user, user, cmdline\n| extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\n| sort by TimeGenerated desc\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query will alert on any attempts to terminate processes related to security monitoring on the host. \nAttackers will often try to terminate such processes post-compromise as seen recently to exploit the remote code execution vulnerability in Log4j."
              },
              {
                "name": "tactics",
                "value": "DefenseEvasion"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 6",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Suspicious Shell script detected",
            "category": "Hunting Queries",
            "query": "Syslog\n| where Facility == 'user'\n| where SyslogMessage has \"AUOMS_EXECVE\"\n| parse SyslogMessage with \"type=\" EventType \" audit(\" * \"): \" EventData\n| where EventType =~ \"AUOMS_EXECVE\"\n| project TimeGenerated, EventType, Computer, EventData\n| parse EventData with * \"syscall=\" syscall \" syscall_r=\" * \" success=\" success \" exit=\" exit \" a0\" * \" ppid=\" ppid \" pid=\" pid \" audit_user=\" audit_user \" auid=\" auid \" user=\" user \" uid=\" uid \" group=\" group \" gid=\" gid \"effective_user=\" effective_user \" euid=\" euid \" set_user=\" set_user \" suid=\" suid \" filesystem_user=\" filesystem_user \" fsuid=\" fsuid \" effective_group=\" effective_group \" egid=\" egid \" set_group=\" set_group \" sgid=\" sgid \" filesystem_group=\" filesystem_group \" fsgid=\" fsgid \" tty=\" tty \" ses=\" ses \" comm=\\\"\" comm \"\\\" exe=\\\"\" exe \"\\\"\" * \"cwd=\\\"\" cwd \"\\\"\" * \"name=\\\"\" name \"\\\"\" * \"cmdline=\\\"\" cmdline \"\\\" containerid=\" containerid\n| where exe has_any (\"bash\",\"dash\")\n| where cmdline matches regex  \"[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\"\n| where cmdline has \"curl\" and cmdline has \"wget\"\n| project TimeGenerated, Computer, audit_user, user, cmdline\n| extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\n| sort by TimeGenerated desc\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query will help detect post compromise suspicious shell scripts that attackers use for downloading and executing malicious files."
              },
              {
                "name": "tactics",
                "value": "Persistence,Execution"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 7",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Suspicious Base64 download activity detected",
            "category": "Hunting Queries",
            "query": "Syslog\n| where Facility == 'user'\n| where SyslogMessage has \"AUOMS_EXECVE\"\n| parse SyslogMessage with \"type=\" EventType \" audit(\" * \"): \" EventData\n| project TimeGenerated, EventType, Computer, EventData\n| where EventType =~ \"AUOMS_EXECVE\"\n| parse EventData with * \"syscall=\" syscall \" syscall_r=\" * \" success=\" success \" exit=\" exit \" a0\" * \" ppid=\" ppid \" pid=\" pid \" audit_user=\" audit_user \" auid=\" auid \" user=\" user \" uid=\" uid \" group=\" group \" gid=\" gid \"effective_user=\" effective_user \" euid=\" euid \" set_user=\" set_user \" suid=\" suid \" filesystem_user=\" filesystem_user \" fsuid=\" fsuid \" effective_group=\" effective_group \" egid=\" egid \" set_group=\" set_group \" sgid=\" sgid \" filesystem_group=\" filesystem_group \" fsgid=\" fsgid \" tty=\" tty \" ses=\" ses \" comm=\\\"\" comm \"\\\" exe=\\\"\" exe \"\\\"\" * \"cwd=\\\"\" cwd \"\\\"\" * \"name=\\\"\" name \"\\\"\" * \"cmdline=\\\"\" cmdline \"\\\" containerid=\" containerid\n| where cmdline has \"/Basic/Command/Base64/\"\n| where exe has_any (\"curl\", \"wget\")\n| parse cmdline with * \"Base64/\" OriginalEncodedCommand:string\n| extend EncodedCommand = extract(\"((?:[A-Za-z0-9+/-]{4})*(?:[A-Za-z0-9+/-]{2}==|[A-Za-z0-9+/-]{3}=|[A-Za-z0-9+/-]{4}))\", 1, OriginalEncodedCommand) \n| extend DecodedCommand = base64_decode_tostring(EncodedCommand) \n| project TimeGenerated, Computer, audit_user, user, cmdline, DecodedCommand, EncodedCommand\n| extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\n| sort by TimeGenerated desc\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query will help detect suspicious encoded Base64 obfuscated scripts that attackers use to encode payloads for downloading and executing malicious files."
              },
              {
                "name": "tactics",
                "value": "Persistence,Execution"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 8",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Possible Container Miner related artifacts detected",
            "category": "Hunting Queries",
            "query": "Syslog\n| where Facility == 'user'\n| where SyslogMessage has \"AUOMS_EXECVE\"\n| parse SyslogMessage with \"type=\" EventType \" audit(\" * \"): \" EventData\n| where EventType =~ \"AUOMS_EXECVE\"\n| parse EventData with * \"syscall=\" syscall \" syscall_r=\" * \" success=\" success \" exit=\" exit \" a0\" * \" ppid=\" ppid \" pid=\" pid \" audit_user=\" audit_user \" auid=\" auid \" user=\" user \" uid=\" uid \" group=\" group \" gid=\" gid \"effective_user=\" effective_user \" euid=\" euid \" set_user=\" set_user \" suid=\" suid \" filesystem_user=\" filesystem_user \" fsuid=\" fsuid \" effective_group=\" effective_group \" egid=\" egid \" set_group=\" set_group \" sgid=\" sgid \" filesystem_group=\" filesystem_group \" fsgid=\" fsgid \" tty=\" tty \" ses=\" ses \" comm=\\\"\" comm \"\\\" exe=\\\"\" exe \"\\\"\" * \"cwd=\\\"\" cwd \"\\\"\" * \"name=\\\"\" name \"\\\"\" * \"cmdline=\\\"\" cmdline \"\\\" containerid=\" containerid\n| where (exe has \"docker\" and cmdline has_any  (\"monero-miner\",\"minergate-cli\",\"aeon-miner\",\"xmr-miner\")) or (exe has_any (\"bash\",\"dash\") and cmdline has \"docker kill\" and cmdline has_any (\"gakeaws\",\"monero\",\"xmr\",\"pocosow\"))\n| project TimeGenerated, Computer, audit_user, user, cmdline\n| extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\n| sort by TimeGenerated desc\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query uses syslog data to alert on possible artifacts associated with container running image related to digital cryptocurrency mining."
              },
              {
                "name": "tactics",
                "value": "Impact,Execution"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 9",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Possible Linux attack toolkit detected via Syslog data",
            "category": "Hunting Queries",
            "query": "Syslog\n| where Facility == 'user'\n| where SyslogMessage has \"AUOMS_EXECVE\"\n| parse SyslogMessage with \"type=\" EventType \" audit(\" * \"): \" EventData\n| where EventType =~ \"AUOMS_EXECVE\"\n| parse EventData with * \"syscall=\" syscall \" syscall_r=\" * \" success=\" success \" exit=\" exit \" a0\" * \" ppid=\" ppid \" pid=\" pid \" audit_user=\" audit_user \" auid=\" auid \" user=\" user \" uid=\" uid \" group=\" group \" gid=\" gid \"effective_user=\" effective_user \" euid=\" euid \" set_user=\" set_user \" suid=\" suid \" filesystem_user=\" filesystem_user \" fsuid=\" fsuid \" effective_group=\" effective_group \" egid=\" egid \" set_group=\" set_group \" sgid=\" sgid \" filesystem_group=\" filesystem_group \" fsgid=\" fsgid \" tty=\" tty \" ses=\" ses \" comm=\\\"\" comm \"\\\" exe=\\\"\" exe \"\\\"\" * \"cwd=\\\"\" cwd \"\\\"\" * \"name=\\\"\" name \"\\\"\" * \"cmdline=\\\"\" cmdline \"\\\" containerid=\" containerid\n| where (exe has \"java\" and cmdline has \"JNDI-Injection-Exploit\") or (exe has \"javac\" and cmdline has \"log4j-payload-generator\") or (cmdline has \"LogMePwn\" and cmdline has \"git clone\")\n| project TimeGenerated, Computer, audit_user, user, cmdline\n| extend AccountCustomEntity = user, HostCustomEntity = Computer, timestamp = TimeGenerated\n| sort by TimeGenerated desc\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query uses syslog data to alert on any attack toolkits associated with massive scanning or exploitation attempts against a known vulnerability."
              },
              {
                "name": "tactics",
                "value": "Reconnaissance,Execution"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Apache Log4j Vulnerability Detection Hunting Query 10",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Network Connection to New External LDAP Server",
            "category": "Hunting Queries",
            "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet lookback = starttime - 14d;\nlet legacy_ldap = (\nCommonSecurityLog\n| where TimeGenerated between(lookback..starttime)\n// Filter to LDAP connections only\n| where ApplicationProtocol =~ \"ldap\"\n// Check LDAP server is external\n| extend private =  ipv4_is_private(DestinationIP)\n| where private == false\n// Filter out events where network connection was blocked - change this to expand hunt\n| where DeviceAction has_any (\"allow\", \"accept\", \"allowed\")\n| summarize by DestinationIP);\nCommonSecurityLog\n| where TimeGenerated between(starttime..endtime)\n| where ApplicationProtocol =~ \"ldap\"\n| extend private =  ipv4_is_private(DestinationIP)\n| where private == false\n| where DestinationIP !in (legacy_ldap)\n| where DeviceAction has_any (\"allow\", \"accept\", \"allowed\")\n| extend timestamp = TimeGenerated\n| project-reorder TimeGenerated, SourceIP, DestinationIP, ApplicationProtocol, DestinationPort, SentBytes, ReceivedBytes, DeviceAction\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This hunting query looks for outbound network connections using the LDAP protocol to external IP addresses, where that IP address has not had an LDAP network connection to it in the 14 days preceding the query timeframe."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.0.2",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "Apache Log4j Vulnerability Detection",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Eli Forbes",
          "email": "v-eliforbes@microsoft.com"
        },
        "support": {
          "name": "Microsoft Sentinel, Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_Log4jPostCompromiseHunting_workbook')]",
              "version": "1.0.2"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Log4jVulnerableMachines_AnalyticalRules')]",
              "version": "1.0.2"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_AzureWAFmatching_log4j_vuln_AnalyticalRules')]",
              "version": "1.0.2"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_Log4J_IPIOC_Dec112021_AnalyticalRules')]",
              "version": "1.0.2"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_UserAgentSearch_log4j_AnalyticalRules')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_WAF_log4j_vulnerability_HuntingQueries')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NetworkConnectionldap_log4j_HuntingQueries')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Firewall_Disable_Activity_HuntingQueries')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Apache_log4j_Vulnerability_HuntingQueries')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Process_Termination_Activity_HuntingQueries')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Suspicious_ShellScript_Activity_HuntingQueries')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Base64_Download_Activity_HuntingQueries')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Container_Miner_Activity_HuntingQueries')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_Linux_Toolkit_Detected_HuntingQueries')]",
              "version": "1.0.2"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NetworkConnectionToNewExternalLDAPServer_HuntingQueries')]",
              "version": "1.0.2"
            }
          ]
        },
        "firstPublishDate": "2021-12-15",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Application",
            "Security - Threat Protection",
            "Security - Vulnerability Management"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
